Задание 1
Дана переменная, в которой хранится слово из латинских букв. Напишите код, который выводит на экран:

среднюю букву, если число букв в слове нечетное;
две средних буквы, если число букв четное.

1
ent_Str = input("Slovo: ")
 
fst_Str = len(ent_Str)
good_Str = fst_Str / 2
if fst_Str % 2 == 0:
    print(ent_Str[int(good_Str)-1:int(good_Str)+1])
elif fst_Str % 2 !=0:
    print(ent_Str[int(good_Str)])
    
Задание 2
Напишите программу, которая последовательно запрашивает у пользователя числа (по одному за раз) и после первого нуля выводит сумму всех ранее введенных чисел.

1.
text = int(input("Вводите значение: "))  
a = []
while text != 0:  
    a.append(text)  
    text = int(input("Вводите значение: "))
print(sum(a))  

Задание 3
Мы делаем MVP dating-сервиса, и у нас есть список парней и девушек.
Выдвигаем гипотезу: лучшие рекомендации мы получим, если просто отсортируем 
имена по алфавиту и познакомим людей с одинаковыми индексами после сортировки! 
Но мы не будем никого знакомить, если кто-то может остаться без пары:

1.
boys = ['Peter','Alex', 'John', 'Arthur', 'Richard']
girls = ['Kate', 'Liza', 'Kira', 'Emma', 'Trisha']
if len(boys)==len(girls):
    print("Идеальная пара:")
    boys.sort()
    girls.sort()
    dating = zip(boys, girls)
    for company in dating:
        print(f"{company[0]} и {company[1]}")
else:
     print("Кто то может остаться без пары")
     
Задание 4
У нас есть список, содержащий информацию о среднедневной температуре 
в Фаренгейтах за произвольный период по странам (структура данных в примере). 
Необходимо написать код, который рассчитает среднюю температуру за период в Цельсиях(!) для каждой страны.

1.
countries_temperature = [
    ['Thailand', [75.2, 77, 78.8, 73.4, 68, 75.2, 77]],
    ['Germany', [57.2, 55.4, 59, 59, 53.6]],
    ['Russia', [35.6, 37.4, 39.2, 41, 42.8, 39.2, 35.6]],
    ['Poland', [50, 50, 53.6, 57.2, 55.4, 55.4]]]

celsius_temperature = list(map(lambda x: [x[0], round((sum(x[1])/len(x[1]) - 32) * 0.56, 2)], countries_temperature))
 
print(celsius_temperature)
